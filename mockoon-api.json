{
    "source": "mockoon:1.11.0",
    "data": [
        {
            "type": "environment",
            "item": {
                "uuid": "",
                "lastMigration": 13,
                "name": "Demo API",
                "endpointPrefix": "",
                "latency": 0,
                "port": 3000,
                "routes": [
                    {
                        "uuid": "",
                        "documentation": "Generate random body (JSON, text, CSV, etc) with templating",
                        "method": "get",
                        "endpoint": "users",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"Templating example\": \"For more information about templating, click the blue 'i' above this editor\",\n  \"users\": [\n    {{# repeat (queryParam 'total' '10') }}\n      {\n        \"userId\": \"{{ faker 'random.number' min=10000 max=100000 }}\",\n        \"firstname\": \"{{ faker 'name.firstName' }}\",\n        \"lastname\": \"{{ faker 'name.lastName' }}\",\n        \"friends\": [\n          {{# repeat (faker 'random.number' 5) }}\n            {\n              \"id\": \"{{ faker 'random.uuid' }}\"\n            }\n          {{/ repeat }}\n        ]\n      },\n    {{/ repeat }}\n  ],\n  \"total\": \"{{queryParam 'total' '10'}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Creates 10 random users, or the amount specified in the 'total' query param",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Use multiple responses with rules",
                        "method": "post",
                        "endpoint": "content/:param1",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"Rules example\": \"Default response. Served if route param 'param1' is not present.\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Default response",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"Rules example\": \"Content XYZ. Served if route param 'param1' equals 'xyz'. (See in 'Rules' tab)\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Content XYZ",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [
                                    {
                                        "target": "params",
                                        "modifier": "param1",
                                        "value": "xyz",
                                        "isRegex": false
                                    }
                                ],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"Rules example\": \"Content not found. Served if route param 'param1' is not equal to 'xyz'. (See in 'Rules' tab)\"\n}\n",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Content not found",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [
                                    {
                                        "target": "params",
                                        "modifier": "param1",
                                        "value": "^(?!.*xyz).*$",
                                        "isRegex": true
                                    }
                                ],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Serve a file dynamically depending on the path param 'pageName'.",
                        "method": "get",
                        "endpoint": "file/:pageName",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Templating is also supported in file path",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "text/html"
                                    }
                                ],
                                "filePath": "./page{{urlParam 'pageName'}}.html",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Path supports various patterns",
                        "method": "put",
                        "endpoint": "path/with/pattern(s)?/*",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "The current path will match the following routes: \nhttp://localhost:3000/path/with/pattern/\nhttp://localhost:3000/path/with/patterns/\nhttp://localhost:3000/path/with/patterns/anything-else\n\nLearn more about Mockoon's routing: https://mockoon.com/docs/latest/routing",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "text/plain"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Can Mockoon forward or record entering requests?",
                        "method": "get",
                        "endpoint": "forward-and-record",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "Mockoon can also act as a proxy and forward all entering requests that are not caught by declared routes. \nYou can activate this option in the environment settings ('cog' icon in the upper right corner). \nTo learn more: https://mockoon.com/docs/latest/proxy-mode\n\nAs always, all entering requests, and responses from the proxied server will be recorded ('clock' icon in the upper right corner).\nTo learn more: https://mockoon.com/docs/latest/requests-logging",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "text/plain"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    }
                ],
                "proxyMode": false,
                "proxyHost": "",
                "https": false,
                "cors": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "proxyReqHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ],
                "proxyResHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            }
        },
        {
            "type": "environment",
            "item": {
                "uuid": "",
                "lastMigration": 13,
                "name": "Aplikasi penjualan",
                "endpointPrefix": "v1",
                "latency": 0,
                "port": 3001,
                "routes": [
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "get",
                        "endpoint": "karyawan",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\r\n  {{#repeat (queryParam 'total' '10')}}\r\n  {\r\n    \"idKaryawan\": {{@index}},\r\n    \"username\": \"{{faker 'name.firstName'}}\",\r\n    \"email\": \"{{faker 'internet.email'}}\",\r\n    \"password\": \"{{faker 'internet.password'}}\",\r\n  },\r\n  {{/repeat}}\r\n]\r\n  ",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [
                                    {
                                        "target": "body",
                                        "modifier": null,
                                        "value": null,
                                        "isRegex": true
                                    }
                                ],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "post",
                        "endpoint": "karyawan",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 201,\n      \"status\": \"Created\",\n      \"message\": \"Karyawan Successfully Created!\"\n    },\n  \"data\": {\n    {{#repeat (queryParam 'total' '1')}}\n  {\n    \"idKaryawan\": {{@index}},\n    \"username\": \"{{faker 'name.firstName'}}\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"password\": \"{{faker 'internet.password'}}\",\n  },\n  {{/repeat}}\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "put",
                        "endpoint": "karyawan/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 200,\n      \"status\": \"OK\",\n      \"message\": \"Karyawan Successfully Updated!\"\n    },\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "delete",
                        "endpoint": "karyawan/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 202,\n      \"status\": \"Accepted\",\n      \"message\": \"Karyawan Successfully Deleted!\"\n    },\n}",
                                "latency": 0,
                                "statusCode": 202,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "get",
                        "endpoint": "produkKategori",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\r\n  {{#repeat (queryParam 'total' '5')}}\r\n  {\r\n    \"idKategori\": {{@index}},\r\n    \"nameKategori\": \"{{faker 'commerce.productMaterial'}}\",\r\n  },\r\n  {{/repeat}}\r\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "post",
                        "endpoint": "produkKategori",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\r\n  \"meta\": \r\n    {\r\n      \"code\": 201,\r\n      \"status\": \"Created\",\r\n      \"message\": \"Karyawan Successfully Created!\"\r\n    },\r\n  \"data\": {\r\n    {{#repeat (queryParam 'total' '1')}}\r\n  {\r\n    \"idKategori\": {{@index}},\r\n    \"nameKategori\": \"{{faker 'commerce.productMaterial'}}\",\r\n  },\r\n  {{/repeat}}\r\n  }\r\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "put",
                        "endpoint": "produkKategori/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 200,\n      \"status\": \"OK\",\n      \"message\": \"Produk Kategori Successfully Updated!\"\n    },\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "delete",
                        "endpoint": "produkKategori/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 202,\n      \"status\": \"Accepted\",\n      \"message\": \"Produk Kategori Successfully Deleted!\"\n    },\n}",
                                "latency": 0,
                                "statusCode": 202,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "get",
                        "endpoint": "produk",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\r\n  {{#repeat (queryParam 'total' '10')}}\r\n  {\r\n    \"idProduk\": {{@index}},\r\n    \"idSupplier\": {{faker 'random.number' 10}},\r\n    \"idKategori\": {{faker 'random.number' 10}},\r\n    \"namaProduk\": \"{{faker 'commerce.productName'}}\",\r\n    \"deskripsiProduk\": \"{{faker 'commerce.productDescription'}}\",\r\n    \"imageProduk\": \"{{faker 'image.food'}}\",\r\n    \"harga\": \"{{faker 'commerce.price'}}\",\r\n    \"stok\": {{faker 'random.number' 100}},\r\n  },\r\n  {{/repeat}}\r\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "post",
                        "endpoint": "produk",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\r\n  \"meta\": \r\n    {\r\n      \"code\": 201,\r\n      \"status\": \"Created\",\r\n      \"message\": \"Produk Successfully Created!\"\r\n    },\r\n  \"data\": {\r\n {{#repeat (queryParam 'total' '1')}}\r\n  {\r\n    \"idProduk\": {{@index}},\r\n    \"idSupplier\": {{faker 'random.number' 10}},\r\n    \"idKategori\": {{faker 'random.number' 10}},\r\n    \"namaProduk\": \"{{faker 'commerce.productName'}}\",\r\n    \"deskripsiProduk\": \"{{faker 'commerce.productDescription'}}\",\r\n    \"imageProduk\": \"{{faker 'image.food'}}\",\r\n    \"harga\": \"{{faker 'commerce.price'}}\",\r\n    \"stok\": {{faker 'random.number' 100}},\r\n  },\r\n  {{/repeat}}\r\n  }\r\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "put",
                        "endpoint": "produk/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 200,\n      \"status\": \"OK\",\n      \"message\": \"Produk Successfully Updated!\"\n    },\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "delete",
                        "endpoint": "produk/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 202,\n      \"status\": \"Accepted\",\n      \"message\": \"Produk Successfully Deleted!\"\n    },\n}",
                                "latency": 0,
                                "statusCode": 202,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "get",
                        "endpoint": "supplier",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\r\n  {{#repeat (queryParam 'total' '10')}}\r\n  {\r\n    \"idSupplier\": {{@index}},\r\n    \"namaSupplier\": \"{{faker 'company.companyName'}}\",\r\n  },\r\n  {{/repeat}}\r\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "post",
                        "endpoint": "supplier",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\r\n  \"meta\": \r\n    {\r\n      \"code\": 201,\r\n      \"status\": \"Created\",\r\n      \"message\": \"Supplier Successfully Created!\"\r\n    },\r\n  \"data\": {\r\n {{#repeat (queryParam 'total' '10')}}\r\n  {\r\n    \"idSupplier\": {{@index}},\r\n    \"namaSupplier\": \"{{faker 'company.companyName'}}\",\r\n  },\r\n  {{/repeat}}\r\n  }\r\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "put",
                        "endpoint": "supplier/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 200,\n      \"status\": \"OK\",\n      \"message\": \"Supplier Successfully Updated!\"\n    },\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "delete",
                        "endpoint": "supplier/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 202,\n      \"status\": \"Accepted\",\n      \"message\": \"Supplier Successfully Deleted!\"\n    },\n}",
                                "latency": 0,
                                "statusCode": 202,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "get",
                        "endpoint": "penjualan",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\r\n\r\n {{#repeat (queryParam 'total' '10')}}\r\n  {\r\n    \"idPenjualan\": {{@index}},\r\n    \"idKaryawan\": {{faker 'random.number' 10}},\r\n    \"idProduk\": {{faker 'random.number' 10}},\r\n    \r\n    \"tglPenjualan\": \"{{faker 'date.recent'}}\",\r\n    \r\n    \"firstProdukNama\": \"{{faker 'commerce.productName'}}\",\r\n    \"firstProdukDeskripsi\": \"{{faker 'commerce.productDescription'}}\",\r\n    \"firstProdukharga\": \"{{faker 'commerce.price'}}\",\r\n    \r\n    \"firstSupplierNama\": \"{{faker 'company.companyName'}}\",\r\n    \"firstKategoriNama\": \"{{faker 'commerce.productMaterial'}}\",\r\n    \r\n    \"jumlah\": {{faker 'random.number' 100}},\r\n    \"totalHarga\": \"{{faker 'commerce.price'}}\",\r\n  },\r\n  {{/repeat}}\r\n}\r\n  ",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [
                                    {
                                        "target": "query",
                                        "modifier": null,
                                        "value": null,
                                        "isRegex": false
                                    }
                                ],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "post",
                        "endpoint": "penjualan",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\r\n  \"meta\": \r\n    {\r\n      \"code\": 201,\r\n      \"status\": \"Created\",\r\n      \"message\": \"Penjualan Successfully Created!\"\r\n    },\r\n  \"data\": {\r\n {{#repeat (queryParam 'total' '10')}}\r\n  {\r\n    \"idPenjualan\": {{@index}},\r\n    \"idKaryawan\": {{faker 'random.number' 10}},\r\n    \"idProduk\": {{faker 'random.number' 10}},\r\n    \r\n    \"tglPenjualan\": \"{{faker 'date.recent'}}\",\r\n    \r\n    \"firstProdukNama\": \"{{faker 'commerce.productName'}}\",\r\n    \"firstProdukDeskripsi\": \"{{faker 'commerce.productDescription'}}\",\r\n    \"firstProdukharga\": \"{{faker 'commerce.price'}}\",\r\n    \r\n    \"firstSupplierNama\": \"{{faker 'company.companyName'}}\",\r\n    \"firstKategoriNama\": \"{{faker 'commerce.productMaterial'}}\",\r\n    \r\n    \"jumlah\": {{faker 'random.number' 100}},\r\n    \"totalHarga\": \"{{faker 'commerce.price'}}\",\r\n  },\r\n  {{/repeat}}\r\n  }\r\n}\r\n",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [
                                    {
                                        "target": "query",
                                        "modifier": null,
                                        "value": null,
                                        "isRegex": false
                                    }
                                ],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "get",
                        "endpoint": "penjualan/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\r\n {{#repeat (queryParam 'total' '2')}}\r\n  {\r\n    \"idDetailPenjualan\": {{@index}},\r\n    \"idPenjualan\": {{faker 'random.number' 10}},\r\n    \"idProduk\": {{faker 'random.number' 10}},\r\n    \r\n    \"tglPenjualan\": \"{{faker 'date.recent'}}\",\r\n    \r\n    \"firstProdukNama\": \"{{faker 'commerce.productName'}}\",\r\n    \"firstProdukDeskripsi\": \"{{faker 'commerce.productDescription'}}\",\r\n    \"firstProdukharga\": \"{{faker 'commerce.price'}}\",\r\n    \r\n    \"firstSupplierNama\": \"{{faker 'company.companyName'}}\",\r\n    \"firstKategoriNama\": \"{{faker 'commerce.productMaterial'}}\",\r\n    \r\n    \"jumlah\": {{faker 'random.number' 100}},\r\n    \"totalHarga\": \"{{faker 'commerce.price'}}\",\r\n  },\r\n  {{/repeat}}\r\n  \r\n]\r\n",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [
                                    {
                                        "target": "query",
                                        "modifier": null,
                                        "value": null,
                                        "isRegex": false
                                    }
                                ],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "delete",
                        "endpoint": "penjualan/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 202,\n      \"status\": \"Accepted\",\n      \"message\": \"Penjualan Successfully Deleted!\"\n    },\n}",
                                "latency": 0,
                                "statusCode": 202,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [
                                    {
                                        "target": "query",
                                        "modifier": null,
                                        "value": null,
                                        "isRegex": false
                                    }
                                ],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    }
                ],
                "proxyMode": false,
                "proxyHost": "",
                "https": false,
                "cors": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "proxyReqHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ],
                "proxyResHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            }
        },
        {
            "type": "environment",
            "item": {
                "uuid": "",
                "lastMigration": 13,
                "name": "TASK-06 Talent Factory Batch 1",
                "endpointPrefix": "",
                "latency": 0,
                "port": 3005,
                "routes": [
                    {
                        "uuid": "",
                        "documentation": "user registration",
                        "method": "post",
                        "endpoint": "registration",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 201,\n      \"status\": \"success\",\n      \"message\": \"Registration successfully\"\n    },\n  \"data\": {\n    \"access_token\": \"5|QGnwvs3Jz7RWQrbtgKxr7KKxp3MvdSCIfLqa3wyy\",\n    \"token_type\": \"Bearer\",\n    \"user\": {\n      \"email\": \"{{ body 'email' }}\",\n      \"password\": \"{{ body 'password' }}\",\n      \"profilePhotoPath\": null,\n      \"firstname\": \"{{ body 'firstName' }}\",\n      \"lastname\": \"{{ body 'lastName' }}\",\n      \"address\": \"{{ body 'address' }}\",\n      \"city\": \"{{ body 'city' }}\",\n      \"phoneNumber\": \"{{ body 'phoneNumber' }}\",\n      \"memberType\": \"{{ body 'memberType' 'Standard' }}\",\n      \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n      \"updated_at\": null,\n      \"deleted_at\": null\n    }\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "get all users",
                        "method": "get",
                        "endpoint": "users",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"success\",\n    \"message\": \"Users list successfully fetched\"\n  },\n  \"data\": [\n    {{# repeat (queryParam 'total' '10') }}\n      {\n        \"id\": \"{{ faker 'random.number' min=10000 max=100000 }}\",\n        \"email\": \"{{ faker 'internet.email' }}\",\n        \"firstname\": \"{{ faker 'name.firstName' }}\",\n        \"lastname\": \"{{ faker 'name.lastName' }}\",\n        \"profilePhotoPath\": \"{{ faker 'internet.avatar' }}\",\n        \"address\": \"{{ faker 'address.cityPrefix' }}\",\n        \"city\": \"{{ faker 'address.city' }}\"\n        \"phoneNumber\": \"{{ faker 'random.number' min=8000000000 max=8999999999 }}\",\n        \"memberType\": \"{{ oneOf (array 'Standard' 'Gold' 'Platinum') }}\",\n        \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n        \"updated_at\": null,\n        \"deleted_at\": null\n      },\n    {{/ repeat }}\n  ],\n  \"total\": 10\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"code\": 404,\n  \"status\": \"error\",\n  \"message\": \"Data not found\"\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "get all users",
                        "method": "put",
                        "endpoint": "users/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": \n    {\n      \"code\": 200,\n      \"status\": \"success\",\n      \"message\": \"User succesfully updated\"\n    },\n    \"data\": {\n      \"id\": \"{{urlParam 'id' }}\"\n      \"email\": \"{{ body 'email' }}\",\n      \"password\": \"{{ body 'password' }}\",\n      \"profilePhotoPath\": \"{{ body 'profilePhotoPath' }}\",\n      \"firstname\": \"{{ body 'firstName' }}\",\n      \"lastname\": \"{{ body 'lastName' }}\",\n      \"address\": \"{{ body 'address' }}\",\n      \"city\": \"{{ body 'city' }}\",\n      \"phoneNumber\": \"{{ body 'phoneNumber' }}\",\n      \"memberType\": \"{{ body 'memberType' 'Standard' }}\",\n      \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n      \"updated_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n      \"deleted_at\": null\n    }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"code\": 404,\n  \"status\": \"error\",\n  \"message\": \"Data not found\"\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "get all users",
                        "method": "delete",
                        "endpoint": "users/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"success\",\n    \"message\": \"User was deleted\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"code\": 404,\n  \"status\": \"error\",\n  \"message\": \"Data not found\"\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "user login",
                        "method": "post",
                        "endpoint": "login",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n      \"code\": 200,\n      \"status\": \"success\",\n      \"message\": \"User Authenticated\"\n  },\n  \"data\": {\n    \"access_token\": \"5|QGnwvs3Jz7RWQrbtgKxr7KKxp3MvdSCIfLqa3wyy\",\n    \"token_type\": \"Bearer\",\n    \"user\": {\n      \"id\": \"{{ faker 'random.number' min=10000 max=100000 }}\",\n      \"email\": \"{{ body 'email' }}\",\n      \"firstname\": \"{{ faker 'name.firstName' }}\",\n      \"lastname\": \"{{ faker 'name.lastName' }}\",\n      \"profilePhotoPath\": \"{{ faker 'internet.avatar' }}\",\n      \"address\": \"{{ faker 'address.cityPrefix' }}\",\n      \"city\": \"{{ faker 'address.city' }}\",\n      \"phoneNumber\": \"{{ faker 'random.number' min=8000000000 max=8999999999 }}\",\n      \"memberType\": \"{{ oneOf (array 'Standard' 'Gold' 'Platinum') }}\",\n      \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n      \"updated_at\": null,\n      \"deleted_at\": null\n    }\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "AND",
                                "disableTemplating": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n    \"code\": 401,\n    \"status\": \"error\",\n    \"message\": \"User unauthorized, check email or password\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": true
                    },
                    {
                        "uuid": "",
                        "documentation": "get all products",
                        "method": "get",
                        "endpoint": "products",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n      \"code\": 200,\n      \"status\": \"success\",\n      \"message\": \"Users list successfully fetched\"\n  },\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"{{ faker 'name.firstName' }}\",\n      \"description\": \"{{ faker 'name.lastName' }}\",\n      \"category\": \"{{ oneOf (array 'short' 'long' 'jacket') }}\",\n      \"price\": \"{{ faker 'random.number' min=9000 max=150000 }}\",\n      \"rate\": \"{{ faker 'random.number' min=1 max=5 }}\",\n      \"picturePath\": \"{{ faker 'internet.avatar' }}\",\n      \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n      \"updated_at\": null,\n      \"deleted_at\": null\n    },\n    {\n      \"id\": 2,\n      \"codeName\": \"{{ faker 'name.firstName' }}\",\n      \"description\": \"{{ faker 'name.lastName' }}\",\n      \"category\": \"{{ oneOf (array 'short' 'long' 'jacket') }}\",\n      \"price\": \"{{ faker 'random.number' min=9000 max=150000 }}\",\n      \"rate\": \"{{ faker 'random.number' min=1 max=5 }}\",\n      \"picturePath\": \"{{ faker 'internet.avatar' }}\",\n      \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n      \"updated_at\": null,\n      \"deleted_at\": null\n    },\n    {\n     \"id\": 3,\n      \"codeName\": \"{{ faker 'name.firstName' }}\",\n      \"description\": \"{{ faker 'name.lastName' }}\",\n      \"category\": \"{{ oneOf (array 'short' 'long' 'jacket') }}\",\n      \"price\": \"{{ faker 'random.number' min=9000 max=150000 }}\",\n      \"rate\": \"{{ faker 'random.number' min=1 max=5 }}\",\n      \"picturePath\": \"{{ faker 'internet.avatar' }}\",\n      \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n      \"updated_at\": null,\n      \"deleted_at\": null\n    },\n    {\n      \"id\": 4,\n      \"codeName\": \"{{ faker 'name.firstName' }}\",\n      \"description\": \"{{ faker 'name.lastName' }}\",\n      \"category\": \"{{ oneOf (array 'short' 'long' 'jacket') }}\",\n      \"price\": \"{{ faker 'random.number' min=9000 max=150000 }}\",\n      \"rate\": \"{{ faker 'random.number' min=1 max=5 }}\",\n      \"picturePath\": \"{{ faker 'internet.avatar' }}\",\n      \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n      \"updated_at\": null,\n      \"deleted_at\": null\n    },\n    {\n      \"id\": 5,\n      \"codeName\": \"{{ faker 'name.firstName' }}\",\n      \"description\": \"{{ faker 'name.lastName' }}\",\n      \"category\": \"{{ oneOf (array 'short' 'long' 'jacket') }}\",\n      \"price\": \"{{ faker 'random.number' min=9000 max=150000 }}\",\n      \"rate\": \"{{ faker 'random.number' min=1 max=5 }}\",\n      \"picturePath\": \"{{ faker 'internet.avatar' }}\",\n      \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n      \"updated_at\": null,\n      \"deleted_at\": null\n    }\n  ],\n  \"total\": 5\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer 5|QGnwvs3Jz7RWQrbtgKxr7KKxp3MvdSCIfLqa3wyy"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n    \"code\": 404,\n    \"status\": \"error\",\n    \"message\": \"Data not found\"\n  }, \n  \"data\": []\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": true
                    },
                    {
                        "uuid": "",
                        "documentation": "create order",
                        "method": "post",
                        "endpoint": "orders",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n      \"code\": 200,\n      \"status\": \"success\",\n      \"message\": \"Users list successfully fetched\"\n  },\n  \"orders\": {\n    \"id\": \"{{ faker 'random.number' min=100 max=1000 }}\",\n    \"userId\": \"{{ body 'userId' }}\",\n    \"productId\": \"{{body 'productId' }}\",\n    \"customImagePath\": \"{{ body 'customImagePath' }}\",\n    \"quantity\": \"{{ body 'quantity' }}\",\n    \"size\": \"{{ body 'size' }}\",\n    \"total\": \"{{ faker 'random.number' min=100000 max=1000000 }}\",\n    \"status\": \"pending\",\n    \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n    \"updated_at\": null,\n    \"deleted_at\": null\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer 5|QGnwvs3Jz7RWQrbtgKxr7KKxp3MvdSCIfLqa3wyy"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n    \"code\": 500,\n    \"status\": \"error\",\n    \"message\": \"Something went wrong\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 500,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": true
                    },
                    {
                        "uuid": "",
                        "documentation": "update transaction",
                        "method": "put",
                        "endpoint": "transactions/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"success\",\n    \"message\": \"Data successfully updated\"\n  },\n  \"data\": {\n    \"id\": \"{{ urlPram 'id' }}\",\n    \"quantity\": \"{{faker 'random.number' min=1 max=10000 }}\",\n    \"total\": \"{{faker 'random.number' min=90000 max=10000000 }}\",\n    \"status\": \"{{ body 'status' }}\"\n    \"payment_url\": \"https://app.sandbox.midtrans.com/snap/v2/vtweb/xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx#/select-payment\",\n    \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n    \"updated_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n    \"deleted_at\": null,\n  },\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer 5|QGnwvs3Jz7RWQrbtgKxr7KKxp3MvdSCIfLqa3wyy"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "checkout process",
                        "method": "get",
                        "endpoint": "checkout/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"success\",\n    \"message\": \"Data successfully fetched\"\n  },\n  \"data\": {\n    \"transactionId\": \"{{urlParam 'id' }}\"\n    \"orderId\": \"{{faker 'random.number' min=1 max=1000 }}\",\n    \"userId\": \"{{faker 'random.number' min=1 max=10 }}\",\n    \"quantity\": \"{{faker 'random.number' min=1 max=10000 }}\",\n    \"total\": \"{{faker 'random.number' min=90000 max=10000000 }}\",\n    \"status\": \"PENDING\",\n    \"payment_url\": \"https://app.sandbox.midtrans.com/snap/v2/vtweb/xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx#/select-payment\",\n    \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n    \"updated_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n    \"deleted_at\": null,\n    \"user\": {\n      \"id\": \"{{ faker 'random.number' min=10000 max=100000 }}\",\n      \"email\": \"{{ faker 'internet.email' }}\",\n      \"firstname\": \"{{ faker 'name.firstName' }}\",\n      \"lastname\": \"{{ faker 'name.lastName' }}\",\n      \"profilePhotoPath\": \"{{ faker 'internet.avatar' }}\",\n      \"address\": \"{{ faker 'address.cityPrefix' }}\",\n      \"city\": \"{{ faker 'address.city' }}\"\n      \"phoneNumber\": \"{{ faker 'random.number' min=8000000000 max=8999999999 }}\",\n      \"memberType\": \"{{ oneOf (array 'Standard' 'Gold' 'Platinum') }}\",\n      \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n      \"updated_at\": null,\n      \"deleted_at\": null\n    },\n    \"product\": {\n      \"id\": 1,\n      \"name\": \"{{ faker 'name.firstName' }}\",\n      \"description\": \"{{ faker 'name.lastName' }}\",\n      \"category\": \"{{ oneOf (array 'short' 'long' 'jacket') }}\",\n      \"price\": \"{{ faker 'random.number' min=9000 max=150000 }}\",\n      \"rate\": \"{{ faker 'random.number' min=1 max=5 }}\",\n      \"picturePath\": \"{{ faker 'internet.avatar' }}\",\n      \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n      \"updated_at\": null,\n      \"deleted_at\": null\n    }\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer 5|QGnwvs3Jz7RWQrbtgKxr7KKxp3MvdSCIfLqa3wyy"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "get transaction",
                        "method": "get",
                        "endpoint": "transactions/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"success\",\n    \"message\": \"Data successfully fetched\"\n  },\n  \"data\": {\n    \"id\": \"{{ urlParam 'id' }}\",\n    \"quantity\": \"{{faker 'random.number' min=1 max=100 }}\",\n    \"total\": \"{{faker 'random.number' min=90000 max=1000000 }}\",\n    \"status\": \"{{ queryParam 'status' }}\",\n    \"payment_url\": \"https://app.sandbox.midtrans.com/snap/v2/vtweb/xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx#/select-payment\",\n    \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n    \"updated_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n    \"deleted_at\": null,\n  },\n  \"user\": {\n    \"id\": \"{{ faker 'random.number' min=10000 max=100000 }}\",\n    \"email\": \"{{ faker 'internet.email' }}\",\n    \"firstname\": \"{{ faker 'name.firstName' }}\",\n    \"lastname\": \"{{ faker 'name.lastName' }}\",\n    \"profilePhotoPath\": \"{{ faker 'internet.avatar' }}\",\n    \"address\": \"{{ faker 'address.cityPrefix' }}\",\n    \"city\": \"{{ faker 'address.city' }}\",\n    \"phoneNumber\": \"{{ faker 'random.number' min=8000000000 max=8999999999 }}\",\n    \"memberType\": \"{{ oneOf (array 'Standard' 'Gold' 'Platinum') }}\",\n    \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n    \"updated_at\": null,\n    \"deleted_at\": null\n  },\n  \"product\": {\n    \"id\": 1,\n    \"name\": \"{{ faker 'name.firstName' }}\",\n    \"description\": \"{{ faker 'name.lastName' }}\",\n    \"category\": \"{{ oneOf (array 'short' 'long' 'jacket') }}\",\n    \"price\": \"{{ faker 'random.number' min=9000 max=150000 }}\",\n    \"rate\": \"{{ faker 'random.number' min=1 max=5 }}\",\n    \"picturePath\": \"{{ faker 'internet.avatar' }}\",\n    \"created_at\": \"{{ faker 'random.number' min=1610000000 max=1699999999 }}\",\n    \"updated_at\": null,\n    \"deleted_at\": null\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer 5|QGnwvs3Jz7RWQrbtgKxr7KKxp3MvdSCIfLqa3wyy"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "post",
                        "endpoint": "logout",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"success\",\n    \"message\": \"Token revoked\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer 5|QGnwvs3Jz7RWQrbtgKxr7KKxp3MvdSCIfLqa3wyy"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    }
                ],
                "proxyMode": false,
                "proxyHost": "",
                "https": false,
                "cors": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "proxyReqHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ],
                "proxyResHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            }
        },
        {
            "type": "environment",
            "item": {
                "uuid": "",
                "lastMigration": 13,
                "name": "Demo API",
                "endpointPrefix": "",
                "latency": 0,
                "port": 30001,
                "routes": [
                    {
                        "uuid": "",
                        "documentation": "Generate random body (JSON, text, CSV, etc) with templating",
                        "method": "get",
                        "endpoint": "users",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"Templating example\": \"For more information about templating, click the blue 'i' above this editor\",\n  \"users\": [\n    {{# repeat (queryParam 'total' '10') }}\n      {\n        \"userId\": \"{{ faker 'random.number' min=10000 max=100000 }}\",\n        \"firstname\": \"{{ faker 'name.firstName' }}\",\n        \"lastname\": \"{{ faker 'name.lastName' }}\",\n        \"friends\": [\n          {{# repeat (faker 'random.number' 5) }}\n            {\n              \"id\": \"{{ faker 'random.uuid' }}\"\n            }\n          {{/ repeat }}\n        ]\n      },\n    {{/ repeat }}\n  ],\n  \"total\": \"{{queryParam 'total' '10'}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Creates 10 random users, or the amount specified in the 'total' query param",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Use multiple responses with rules",
                        "method": "post",
                        "endpoint": "content/:param1",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"Rules example\": \"Default response. Served if route param 'param1' is not present.\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Default response",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"Rules example\": \"Content XYZ. Served if route param 'param1' equals 'xyz'. (See in 'Rules' tab)\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Content XYZ",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [
                                    {
                                        "target": "params",
                                        "modifier": "param1",
                                        "value": "xyz",
                                        "isRegex": false
                                    }
                                ],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"Rules example\": \"Content not found. Served if route param 'param1' is not equal to 'xyz'. (See in 'Rules' tab)\"\n}\n",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Content not found",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [
                                    {
                                        "target": "params",
                                        "modifier": "param1",
                                        "value": "^(?!.*xyz).*$",
                                        "isRegex": true
                                    }
                                ],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Serve a file dynamically depending on the path param 'pageName'.",
                        "method": "get",
                        "endpoint": "file/:pageName",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Templating is also supported in file path",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "text/html"
                                    }
                                ],
                                "filePath": "./page{{urlParam 'pageName'}}.html",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Path supports various patterns",
                        "method": "put",
                        "endpoint": "path/with/pattern(s)?/*",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "The current path will match the following routes: \nhttp://localhost:3000/path/with/pattern/\nhttp://localhost:3000/path/with/patterns/\nhttp://localhost:3000/path/with/patterns/anything-else\n\nLearn more about Mockoon's routing: https://mockoon.com/docs/latest/routing",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "text/plain"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Can Mockoon forward or record entering requests?",
                        "method": "get",
                        "endpoint": "forward-and-record",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "Mockoon can also act as a proxy and forward all entering requests that are not caught by declared routes. \nYou can activate this option in the environment settings ('cog' icon in the upper right corner). \nTo learn more: https://mockoon.com/docs/latest/proxy-mode\n\nAs always, all entering requests, and responses from the proxied server will be recorded ('clock' icon in the upper right corner).\nTo learn more: https://mockoon.com/docs/latest/requests-logging",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "text/plain"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false
                    }
                ],
                "proxyMode": false,
                "proxyHost": "",
                "https": false,
                "cors": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "proxyReqHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ],
                "proxyResHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            }
        }
    ]
}